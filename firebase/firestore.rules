rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    function userRole() {
      return get(/databases/$(db)/documents/users/$(request.auth.uid)).data.role;
    }
    function isTeacher() { return userRole() == 'teacher'; }
    function isStudent() { return userRole() == 'student'; }
    function isOwner(uid) {
      return request.auth != null && request.auth.uid == uid;
    }

    match /users/{uid} {
      allow read: if isOwner(uid) || isTeacher();
      allow write: if isOwner(uid);
    }

    match /classes/{classId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isTeacher();
    }

    match /classes/{classId}/students/{uid} {
      allow read: if isOwner(uid) || isTeacher();
      allow write: if isTeacher();
    }

    match /sessions/{sessionId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isTeacher();
    }

    match /attendances/{attendanceId} {
      allow read: if request.auth != null;
      allow create: if isStudent() && request.resource.data.studentId == request.auth.uid;
      allow update: if false; // présence immuable après envoi
    }
  }
}
